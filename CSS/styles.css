/*
Colors used

Text Color (Dark Gray): #2c2c2c;
Background Color (Light purple):#E4E1E5;
Primary Color ( Purple): #3F0B52;
Secondary Color (Light Gray): #D3D0CB;
Change color when hovering (Pink): #FF7485
Line color (light Gray): #b0afaf;
 */

 :root {
    --primary-color:#3F0B52;
    --secondary-color:#FF7485;
    --dark-gray: #2c2c2c;
    --bg-color: #E4E1E5;
    --light-gray:  #b0afaf;
    --white:#fff;
    --light-gray-link:#D3D0CB;
    --scale: 1.05;
    --box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.4),  0 6px 20px 0 rgba(0, 0, 0, 0.19);
  }
 *{
box-sizing: border-box;
 }
body { 
    background-color:var(--bg-color);
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.5;
    color: var(--dark-gray);
}
h1 { 
    font-size: 40px;
    font-weight: 600;
}

.heading_contact,
.heading_my_work{
    display: flex;
    text-align: left;
    margin-left: 24px;
    margin-right: 24px;
    }
h2 {
    font-size: 28;
    line-height: 1.5;
    font-weight: 600;
}
h3 {
    font-size: 18;
    line-height: 1.5;
    font-weight: 600;
}
/*Link-Change color, remove underline */
a {
   color:var(--dark-gray); 
   text-decoration: none;
   font-size: 16px;
   /* padding: 8px 8px; */
}
/* Remove underline and add color to text */
a:hover, a:focus {
text-decoration: none;
color:var(--secondary-color);
}

button,
.button{ 
    /* button can be styled*/
    background-color:var(--primary-color);
    color:var(--bg-color);
    padding: 16px 32px;
    border-radius: 30px;
    border: none;
}
button:hover, button:focus,
.button:hover,.button:focus {
    /* while hovering appears a hand over it*/
    cursor: pointer;
    /* reduces the opacity*/
    background-color: var(--secondary-color); 
    color:var(--dark-gray); 
}
.button, button {
    display: inline-block;
    /* takes the font from the outer container */
    font-family: inherit;
    transition: 0.3s ease background-color color;
    transition-property: opacity;
  }
  /* .button_primary{
    background-color: #574C5C;
    color: #D3D0CB;
    border-color: #574c5c;
} */
/* .button_secondary{
    background-color: transparent;
    color: #574C5C;
    border-color: #574C5C;
} */
/* Submit button from Contact page */
.submit{
    background-color: var(--white);
    border-radius: 4px;
    color:var(--dark-gray);
    padding: 8px 16px;
    transition: 0.3s ease;
}
.submit:hover{
    cursor: pointer;
    background-color: var(--secondary-color);
   
}
.page_header{
   display: flex;
   /* align-content: last baseline; */
   width: 100%;
   padding: 16px 24px 16px 0px;
}
.page_header_item{ 
    flex: 0 1 70px;
    letter-spacing: -0.5px;
}
.page_header.about_header{
    border-bottom:1px solid var(--light-gray);
}
/*.page_header_item:nth-child(1){
    width: 200px;
    text-align: start; 
} */
.page_header_item:last-child{
    flex-grow: 1;
    text-align: right;
    align-self: center;
}
/* Menu Items, default, hover and active */
.navigation_item {
    font-family: 'Magra', sans-serif;
    font-size: 15px;
    padding: 8px;
    transition: 0.2s ease;
}
.navigation_item--active {
text-decoration: underline;
color:var(--primary-color);
}

.profile_portrait{
    float: left;
   /*  max-width: 250 px;
    min-width: 250px;*/
    width: 250px;
    margin-right: 40px;
    border-radius: 50%;
}
.profile{
    width: 50%;
    margin: 100px auto 200px;
    /* margin-bottom: 200px; */
}
.profile_paragraph{
font-size: 18px;
}
.page_footer{
    clear: both;
    display: flex;
    flex-direction: column;
    text-align: center;
}
#button_go_top{
    display: flex;
    flex-direction:column;
    text-align: right;
}
/* start grid fallback */
.grid__item {
    display: inline-block;
    width: 33%;
   }
   /* end grid fallback */

   /* Grid display on My work Page */
@supports (display: grid) {
.grid{
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    /* grid-template-rows: 300px 300px;
     */
     grid-gap: 24px;
     margin: 16px 24px;
}
.grid_item{
    position: relative; /* Position relative for positioning the pseudo-element */
    background-color:var(--dark-gray);
    color:var(--white);
    width: auto;
    min-height: auto;
    padding: 24px;
    border-radius: 12px;
    box-shadow:var(--box-shadow);
    transition: 0.3s ease; /*Add a smooth transition for the transform property
    /*overflow: hidden; /* Hide overflow for the pseudo-element */
}
/*.grid_item::before{
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color:rgba(44, 44, 44, 0.5); /* Semi-transparent black overlay */
    /*opacity: 0;  Initially hidden */
   /* transition: opacity 0.3s ease;  Add a smooth transition for the opacity property */
} 
.grid_item:hover{
    transform: scale(var(--scale)); /* Scale the item on hover */
    cursor: pointer;
    }
.grid_item:last-child{
    grid-column-start: 3;
    grid-column-end: 3;
    grid-row-start: 1;
    grid-row-end: 3;
/* "Alternative of the code above" 
   .grid__item:last-child {
   grid-column: 3 / 3;
   grid-row: 1 / 3;
 } */
}
/* this is the class of <a href="#" class="link_mywork">See project</a> on my-work.html */
.link_mywork{
    color:var(--light-gray-link);
    padding: 0 0;
}
/* !!! do I start another grid fallback? !!!

start grid fallback */
/* .grid__item {
    display: inline-block;
    width: 33%;
   } */
   /* end grid fallback */
/* @supports (display: grid) { */

    /* Grid display on Contact page */
.grid_contact{
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto; /* Adjust this based on the content height */
    justify-content: center;
    grid-gap: 32px;
    /* padding: 16px; */
    margin: 24px;
}
.grid_contact_item{
    position: relative;
    background-color:var(--primary-color); 
    color: var(--white);
    width: auto;
    min-height: auto;
    padding: 24px 32px; 
    border-radius: 12px;
    box-shadow:var(--box-shadow);
}
.grid_contact_item:nth-child(1){
    background-color:transparent;
    box-shadow: none;
    color: #2c2c2c;
}
#button_go_top{
    margin: 16px 24px;
}
/* setting media queries for mobile screens */
@media all and (max-width: 500px ){
    .grid{
        grid-template-columns: 1fr;
        grid-gap: 16px;
        
    }
    .grid_item:last-child{
        grid-column: auto/auto;
        grid-row: auto/auto;
    }
    h1{
        font-size: 22px;
    }

    .grid_contact{
    grid-template-columns: 1fr;
    grid-gap: 32px;
    }
 }
 
/* Setting media queries for tablet screens */
@media all and (min-width: 500px ) and (max-width: 750px){
    .grid{
        grid-template-columns: 1fr 1fr;
        grid-gap: 16px;
        
    }
    .grid_item:last-child{
        grid-column: auto/auto;
        grid-row: auto/auto;
    }
    h1{
        font-size: 22px;
    }
}
.about_content{
    display: flex;
    flex-flow:column wrap;
    width: 700px;
    justify-content: center;
    padding: 24px;
    margin:auto;
}
.about_child{
    align-self: flex-start;
    margin: 8px;
}
.about_child:nth-child(1),
.about_child:nth-child(6),
.about_child:nth-child(7){
    align-self: center;
}
.about_child:nth-child(6){
    margin: 32px 0px 8px;
}

/* Media Query for screens 500px and below */
@media all and ( max-width: 500px){
    .about_content{
    flex-direction: column;
    width: auto;
    }
   .about_child{
    flex: 0 1 0;
   }
   h2{
    font-size: 18px;
   }
   p{
    font-size: 14px;
   }
   .button{
    font-size: 14px;
    width: 100%;
    
   }
    }
    @media all and (min-width: 500px ) and (max-width: 750px){
        .about_content{
        flex-direction: column;
        width: auto;
        }
       .about_child{
        flex: 0 1 0;
       }
       h2{
        font-size: 18px;
       }
       p{
        font-size: 16px;
       }      
       }
       /* Start of animation transformation.
       Animation applied to the sun */
       .sun{
        animation-duration: 4s;
        animation-name: color-change;
        animation-iteration-count: infinite;
        animation-direction: alternate;
        animation-timing-function: linear;
 /* Alternative code which makes the code shorter is to combine all proprieties in a single line
         .sun{
            animation: 4s color-change infinite alternate linear } */
       }
       @keyframes color-change {
        0% {
          fill: #edc655;
        }
        50% {
          fill: #fcffad;
        }
        100% {
          fill: #f76414;
        }
      }
      /* Animation applied to the cloud */
      .cloud-front{
        animation: 30s cloud-move infinite alternate linear;
      }
      @keyframes cloud-move {
        from {
          transform: translate(0, 50px);
        }
        to {
          transform: translate(200px, 50px);
        }
      }
      .cloud-back{
        animation: 34s cloud-move-reverse infinite alternate linear;
      }
      @keyframes cloud-move-reverse{
        from{
            transform:translate(446px, 48px);
        }
        to{
            transform: translate(100px, 48px);
        }
      }
        